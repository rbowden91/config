set-option -g prefix C-a
set -g base-index 1

# vi is good
setw -g mode-keys vi

# mouse behavior
setw -g mouse on
#bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
#bind -n WheelDownPane select-pane -t= \; send-keys -M


bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history
bind-key enter next-layout

bind-key c new-window
bind-key t next-window
bind-key T previous-window
bind-key space next-window
bind-key bspace previous-window

# use vim-like keys for splits and windows
bind-key v split-window -h
bind-key s split-window -v
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

bind-key a last-pane
bind-key q display-panes

# https://superuser.com/questions/891915/interactive-search-of-tmux-session
# https://superuser.com/questions/1397211/interactive-search-of-tmux-sessions-and-windows-with-synchronize-panes-on
#bind-key s split-window -v "tmux list-sessions -F '#S' | fzf --reverse | xargs tmux switch-client -t"
#bind-key k split-window -v "tmux list-window -F '#W' | fzf --reverse | xargs tmux select-window -t"
bind-key S split-window -v '\
	if [[ $(tmux show-window-option synchronize-panes) == *on ]];\
	then tmux set-window-option -q synchronize-panes off;\
	restore="tmux set-window-option -q synchronize-panes on";\
	fi;\
	tmux list-sessions -F "#S" | fzf --reverse | xargs tmux switch-client -t;\
	$restore'
bind-key W split-window -v '\
	if [[ $(tmux show-window-option synchronize-panes) == *on ]];\
	then tmux set-window-option -q synchronize-panes off;\
	restore="tmux set-window-option -q synchronize-panes on";\
	fi;\
	tmux list-windows -F "#S" | fzf --reverse | xargs tmux select-window -t;\
	$restore'



# smart pane switching with awareness of vim splits
bind-key -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind-key -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind-key -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind-key -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
bind-key -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
bind-key C-l send-keys 'C-l'

bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80


bind-key [ copy-mode
bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
# TODO: pbcopy for osx
#bind-key -T copy-mode-vi y send -X copy-pipe "reattach-to-user-namespace pbcopy"
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'


# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
#bind-key -T copy-mode-vi Enter send -X copy-pipe "reattach-to-user-namespace pbcopy"
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'


set-window-option -g display-panes-time 1500

# Status Bar
set-option -g status-left ''
set-option -g status-right '%l:%M%p'
set-window-option -g window-status-current-fg magenta
set-option -g status-fg default

# Status Bar solarized-dark (default)
set-option -g status-bg black
set-option -g pane-active-border-fg yellow
set-option -g pane-border-fg cyan

# Status Bar solarized-light
if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g status-bg white"
if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-active-border-fg white"
if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-border-fg white"

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# don't remove DISPLAY variable
#set-option -g update-environment "SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"

# Enable native Mac OS X copy/paste
#set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# Plugins

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-strategy-vim 'session'



# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
